name: Build
on: [push, pull_request]
jobs:
  build:
    name: Build ${{matrix.build-targets.name}}
    runs-on: ${{matrix.build-targets.os}}
    strategy:
      matrix:
        build-targets:
          - {
            name: "Linux (x64)",
            os: "ubuntu-latest",
            cFlags: "",
            uploadName: "PGM2CHR-Linux_x64",
            filename: "PGM2CHR"
          }
          - {
            name: "Windows (x64)",
            os: "windows-latest",
            cFlags: "",
            uploadName: "PGM2CHR-Win_x64",
            filename: "PGM2CHR.exe"
          }
          - {
            name: "macOS (x64)",
            os: "macos-15-intel",
            cFlags: "",
            uploadName: "PGM2CHR-Mac_x64",
            filename: "PGM2CHR"
          }
          - {
            name: "macOS (arm64e)",
            os: "macos-latest",
            cFlags: "",
            uploadName: "PGM2CHR-Mac_arm64e",
            filename: "PGM2CHR"
          }
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      
      - name: Configure CMake
        run: >
          cmake -S .
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_C_FLAGS=${{matrix.build-targets.cFlags}}
          -G "Unix Makefiles"
      
      - name: Build
        run: cmake --build .
      
      - name: Test
        run: |
          ./${{matrix.build-targets.filename}} example1.pgm
          ./${{matrix.build-targets.filename}} example2.pgm
      
      - name: Strip (macOS)
        if: contains(matrix.build-targets.os, 'macos')
        run: strip ${{matrix.build-targets.filename}}
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.build-targets.uploadName}}
          path: |
            ${{matrix.build-targets.filename}}
            LICENSE